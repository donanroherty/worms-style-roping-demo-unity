TERRAIN SHADERS
==============

Skyshop 1.04 introduces image-based lighting shaders for Unity's built-in terrain system. 

SETTING UP TERRAIN
---
- Create a terrain object
- Optional: Sculpt the terrain or import heightmap data 
- Add texture layers to the terrain using the "Paint Texture" submenu of the terrain inspector (paintbrush icon)
- Optional: Import a layer weight texture, also known as a control-map or splat-map, using Edit->Terrain->Import Splatmap...
   NOTE: Texture layers must exist before you import a splatmap, the importer cannot add or remove texture layers, only modify their masks.

- Create a new Material and set its shader type to "Marmoset/Terrain/Terrain Specular IBL"
   NOTE: Many terrain apearance options can only be adjusted by modifying this material directly. Some settings, such as layer tiling options can only be set here. Other fields such as the various textures used for diffuse and normalmap layers are overriden by the terrain engine and cannot be changed here. They are only exposed for the sake of using the terrain shaders on regular meshes, outside of Unity's terrain system.
   NOTE: You may also add base diffuse and base normalmap textures to this material. These are textures that span the entire terrain, and are composited with the tiling layer textures in the shader.

- Assign this material to the "Material" field in the "Terrain Settings" submenu of the terrain inspector (gear icon)
- Your terrain is now ready to render with image based lighting


IMPORT/EXPORT SPLATMAP
---
Skyshop also includes two handy scripts for managing splatmaps: the textures that define weights of each terrain layer. These scripts can be found under Edit/Terrain/Import Splatmap... & Export Splatmap... and are very useful when bringing in generated terrain data from third-party programs such as World Machine.


TERRAIN SHADER TYPES
---
Two types of Marmoset terrain shaders are included:

SIMPLE TERRAIN IBL
This is Unity's standard diffuse-only terrain shader with layered color, no normalmapping, and up to 4 texture layers per render pass. additional texture layers are rendered in sets of 4 using additional render passes.

ADVANCED TERRAIN
This is Marmoset's advanced terrain shader and comes in both diffuse and diffuse + specular versions:

TERRAIN DIFFUSE IBL
- 4 tiling diffuse texture layers
- 4 tiling normalmap layers
- Base diffuse texture spanning the entire terrain, multiplied into the tiling texture layers
- Ambient occlusion in the base diffuse alpha channel
- Base normalmap spanning the entire terrain, which forms the basis space for the tiling normalmap layers
- Diffuse fresnel, simulating the grazing angle highlights of fuzzy surfaces like distant grass and moss
- Additional diffuse texture layers rendered in additional passes with a simpler shader
- Simpler terrain shader for distant terrain geometry

TERRAIN SPECULAR IBL
Same as the diffuse shader above, adding specular reflection and lighting controls
- Specular fresnel, simulating the grazing angle reflections of wet surfaces
- Per-layer control of specular intensity
- Per-layer control of specular gloss (roughness/shininess)
- Per-layer specular intensity mask in the alpha channel of the tiling diffuse textures



TERRAIN SHADER PARAMETERS
---
The following are all the shader controls available to you in the material inspector: 

DIFFUSE COLOR
Base color for all diffuse lighting, multiplied by diffuse textures.

DETAIL WEIGHT
Defines intensity of tiling normalmaps when overlaying them on the base normalmap

FADE NEAR
Starting distance from the camera where the simpler, distant terrain shader starts fading in

FADE RANGE
Distance beyond "Fade Near" over which the full terrain shader fades out and the distant terrain shader fades in

LAYER 0..3 TILING (XY) OFFSET (ZW) 
Define per-layer uv tiling and offsets for the various diffuse and normalmap layers, as computed by uv=uv*tiling.xy+tiling.zw;

MASTER SPECULAR INTENSITY
Uniform multiplier on all the per-layer specular intensity sliders

INTENSITY 0..3
Per-layer multipliers that mask both the direct and image-based specular lighting terms

MASTER SPECULAR SHARPNESS
Uniform multiplier on all the per-layer specular sharpness sliders. These values are multiplied by the alpha component of the tiling diffuse textures.

SHARPNESS 0..3
Controls for the specular gloss or shininess of each layer

SPECULAR FRESNEL
Uniform control on the falloff of specular reflection at grazing angles of the surface

MASTER DIFFUSE FRESNEL
Uniform multiplier on all the per-layer diffuse fresnel sliders

DIFFUSE FRESNEL 0..3
Per-layer controls for the intensity of diffuse fresnel lighting, simulating fuzzy materials like moss and grass

SECONDARY FRESNEL 4..7
Per-layer controls for diffuse fresnel on layers 4 through 7, rendered in a separate render pass

BASE DIFFUSE (RGB) OCCLUSION (A)
Texture containing diffuse color and ambient occlusion spanning the entire terrain. Base diffuse is multiplied into the tiling diffuse texture color, base occlusion is multiplied into the image-based lighting term; direct lighting is not occluded.

BASE NORMALMAP (RGB)
Normalmap that spans the entire terrain and forms the basis space for the tiling normalmap layers.

CUSTOM DIFFUSE CUBE & CUSTOM SPECULAR CUBE
Cubemaps put into these slots will override the global diffuse and specular lighting cubes. Use if you would like a custom lighting function to apply to a specific material.

SPLATMAP (RGBA)
Layer weight texture that controls where each color channel controls where one of the 4 texture layers is visible. This texture is ignored when using the terrain system.

LAYER 0..3 (RGB) SPEC (A)
Tiling diffuse textures for the various texture layers, containing a specular intensity term in the alpha channel. This texture is ignored when using the terrain system.

NORMAL 0..3 (RGB)
Tiling normalmaps for the various texture layers. This texture is ignored when using the terrain system.


